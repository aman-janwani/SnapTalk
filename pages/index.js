import Head from "next/head";
import Input from "../components/Input";
import Sidebar from "../components/Sidebar";
import { db, auth } from "../firebase";
import { useRouter } from "next/router";
import { useAuthState } from "react-firebase-hooks/auth";
import {
  collection,
  getDocs,
  addDoc,
  query,
  deleteDoc,
  doc,
  orderBy,
  onSnapshot,
} from "firebase/firestore";

import { useCallback, useEffect, useState } from "react";
import Post from "../components/Post";

const Home = () => {
  const [posts, setPosts] = useState([]);

  const read = useCallback(async () => {
    const q = query(collection(db, "posts"), orderBy("timestamp", "desc"));
    const unsubscribe = onSnapshot(q, (querySnapshot) => {
      const datalist = querySnapshot.docs.map((doc) => {
        return doc;
      });
      setPosts(datalist);
    });
    return unsubscribe;
  }, []);

  useEffect(() => {
    read();
  }, [read]);

  const [user, loading, error] = useAuthState(auth);

  const router = useRouter();

  // send user to login page if not logged in
  useEffect(() => {
    if (loading) return;
    if (!user) router.replace("/login");
  });

  if (!auth.currentUser) {
    return (
      <div className="flex items-center justify-center w-screen h-screen">
        <div className="flex justify-center items-center space-x-1 text-2xl font-poppins text-gray-700">
          <svg
            fill="none"
            className="w-10 h-10 animate-spin"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              clipRule="evenodd"
              d="M15.165 8.53a.5.5 0 01-.404.58A7 7 0 1023 16a.5.5 0 011 0 8 8 0 11-9.416-7.874.5.5 0 01.58.404z"
              fill="currentColor"
              fillRule="evenodd"
            />
          </svg>

          <div>Loading ...</div>
        </div>
      </div>
    );
  } else {
    return (
      <div className="relative max-w-[100rem] mx-auto bg-gray-100 w-full flex flex-row items-start justify-start text-left text-5xl text-gray-400 font-poppins">
        <Head>
          <title>SnapTalk</title>
          <meta name="description" content="Generated by create next app" />
        </Head>
        {/* Sidebar start */}
        <Sidebar />
        {/* Sidebar end */}
        <div className="flex-1 space-y-10 pb-5 flex flex-col p-[6px_30px_0px] box-border items-center justify-between text-base">
          <Input />
          {posts.length > 0 ? (
            <>
              {posts.map((post) => {
                return (
                  <Post
                    key={post.id}
                    currentUser={auth.currentUser}
                    id={post.id}
                    name={post.data().name}
                    message={post.data().message}
                    email={post.data().email}
                    timestamp={post.data().timestamp}
                    userImage={post.data().userImage}
                    image={post.data().image}
                  />
                );
              })}
            </>
          ) : (
            <div className="flex justify-center items-center space-x-1 text-2xl font-poppins text-gray-700">
              <svg
                fill="none"
                className="w-10 h-10 animate-spin"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clipRule="evenodd"
                  d="M15.165 8.53a.5.5 0 01-.404.58A7 7 0 1023 16a.5.5 0 011 0 8 8 0 11-9.416-7.874.5.5 0 01.58.404z"
                  fill="currentColor"
                  fillRule="evenodd"
                />
              </svg>

              <div>Loading ...</div>
            </div>
          )}
        </div>
      </div>
    );
  }
};

export default Home;
